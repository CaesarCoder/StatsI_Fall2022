## Packages
library(tidyverse) # Load our packages here
library(broom) # If not installed - function for installing?
install.packages(broom)
install.packages(broom)
install.packages("broom")
install.packages("broom")
library(broom) # If not installed - function for installing?
browseVignettes(package = "tidyverse")
?tidyverse
?tidyverse
?tidyverse
# readr uses a very similar format to base r functions. For example,
# we can read in a csv file using the read_csv() function, which is
# similar to base R's read.csv() function.
dat <- read.csv("movies.csv")
dat2 <- read_csv("movies.csv")
dat1 <- read_csv("movies.csv")
## Packages
library(tidyverse) # Load our packages here
library(broom) # If not installed - function for installing?
install.packages("broom")
dat1 <- read_csv("movies.csv")
class(dat)
class(dat1)
vignette("tibble")
## (Filtering on) rows
filter(dat, title_type == "Feature Film")
## (Selecting or mutating on) columns
select(dat, thtr_rel_month)
mutate(dat, rel_mon = month.abb[thtr_rel_month])
## Group by and summarise into a single row
by_month <- group_by(dat, thtr_rel_month)
summarise(by_month, n = n())
dat %>%
filter(title_type == "Feature Film") %>% # filter on the rows
select(thtr_rel_month) %>% # select one column
mutate(month = month.abb[thtr_rel_month]) %>% # change to month abbreviation
group_by(month) %>% # group data by month
summarise(n = n()) %>% # perform a summary operation (count the n per month)
arrange(desc(n)) # sort in descending order
dat %>%
filter(title_type == "Horror Film") %>% # filter on the rows
select(thtr_rel_month) %>% # select one column
mutate(month = month.abb[thtr_rel_month]) %>% # change to month abbreviation
group_by(month) %>% # group data by month
summarise(n = n()) %>% # perform a summary operation (count the n per month)
arrange(desc(n)) # sort in descending order
dat %>%
filter(title_type == "Horror Film") %>% # filter on the rows
select(thtr_rel_month) %>% # select one column
mutate(month = month.abb[thtr_rel_month]) %>% # change to month abbreviation
group_by(month) %>% # group data by month
summarise(n = n()) %>% # perform a summary operation (count the n per month)
arrange(desc(n)) # sort in descending order
dat %>%
filter(title_type == "Horror Film") %>%
select(thtr_rel_month) %>%
mutate(month = month.abb[thtr_rel_month]) %>%
group_by(month) %>%
summarise(n = n()) %>%
arrange(desc(n))
dat %>%
filter(title_type == "Horror") %>%
select(thtr_rel_month) %>%
mutate(month = month.abb[thtr_rel_month]) %>%
group_by(month) %>%
summarise(n = n()) %>%
arrange(desc(n))
dat %>%
filter(title_type == "Horror") %>%
select(thtr_rel_month) %>%
mutate(month = month.abb[thtr_rel_month]) %>%
group_by(month) %>%
summarise(n = n()) %>%
arrange(desc(n))
dat %>%
filter(title_type == "horror") %>%
select(thtr_rel_month) %>%
mutate(month = month.abb[thtr_rel_month]) %>%
group_by(month) %>%
summarise(n = n()) %>%
arrange(desc(n))
dat %>%
filter(title_type == "Horror") %>%
select(thtr_rel_month) %>%
mutate(month = month.abb[thtr_rel_month]) %>%
group_by(month) %>%
summarise(n = n()) %>%
arrange(desc(n))
dat %>%
filter(genre == "Horror") %>%
select(thtr_rel_month) %>%
mutate(month = month.abb[thtr_rel_month]) %>%
group_by(month) %>%
summarise(n = n()) %>%
arrange(desc(n))
View(dat)
dat %>%
select(actor1) %>% # select one column
mutate(month = month.abb[thtr_rel_month]) %>% # change to month abbreviation
group_by(month) %>% # group data by month
summarise(n = n()) %>% # perform a summary operation (count the n per month)
arrange(desc(n)) # sort in descending order
dat %>%
filter(best_actor_win == "yes") %>%
select(actor1) %>% # select one column
mutate(month = month.abb[thtr_rel_month]) %>% # change to month abbreviation
group_by(month) %>% # group data by month
summarise(n = n()) %>% # perform a summary operation (count the n per month)
arrange(desc(n)) # sort in descending order
dat %>%
filter(best_actor_win == "yes") %>%
select(actor1) %>% # select one column
mutate(month = month.abb[thtr_rel_month]) %>% # change to month abbreviation
group_by(month) %>% # group data by month
summarise(n = n()) %>% # perform a summary operation (count the n per month)
arrange(desc(n)) # sort in descending order
dat %>%
filter(best_actor_win == "yes") %>%
group_by(actor1) %>% # group data by month
summarise(n = n()) %>% # perform a summary operation (count the n per month)
arrange(desc(n)) # sort in descending order
dat %>%
mutate(month = month.abb[thtr_rel_month]) %>%
group_by(month) %>%
summarise(n = n()) %>%
mutate(prop_month = round(n / sum(n), 2)) %>% # mutate after our summarise to find the proportion
arrange(desc(prop_month))
dat %>%
feliter(genere == "Horror")
dat %>%
feliter(genre == "Horror")%>%
mutate(month = month.abb[thtr_rel_month]) %>%
group_by(month) %>%
summarise(n = n()) %>%
mutate(prop_month = round(n / sum(n), 2)) %>% # mutate after our summarise to find the proportion
arrange(desc(prop_month))
dat %>%
filter(genre == "Horror")%>%
mutate(month = month.abb[thtr_rel_month]) %>%
group_by(month) %>%
summarise(n = n()) %>%
mutate(prop_month = round(n / sum(n), 2)) %>% # mutate after our summarise to find the proportion
arrange(desc(prop_month))
dat %>%
select(genre, thtr_rel_month) %>% # just keep the two relevant cols
mutate(horror = genre == "Horror") %>% # make a new logical col for horror films
group_by(thtr_rel_month, horror) %>% # perform a nested grouping operation (release month, then T/F horror)
summarise(n = n()) %>% # get a raw count for each group
pivot_wider(names_from = horror, values_from = n) %>% # change the shape of our data
ungroup() %>%
mutate(All = round(`FALSE` / sum(`FALSE`), 2), # calculate proportions for all films
Horror = `TRUE` / sum(`TRUE`, na.rm = TRUE)) %>% # calculate proportions for horror films
select(thtr_rel_month, All, Horror) %>% # drop all other columns
pivot_longer(cols = c("All", "Horror"), names_to = "film_type") %>% # change the shape again!
mutate(month = factor(month.abb[thtr_rel_month], levels = month.abb)) %>% # create a factor for months
ggplot(aes(month, value)) + # plot the data
geom_col(aes(fill = film_type), position = "dodge") +
labs(title = "Proportion of Theatrical Releases by Month", y = "proportion")
dat %>%
filter(thtr_rel_year > 1996 & thtr_rel_year < 1999) %>%
filter(runtime > 120) %>%
select(title, runtime, thtr_rel_year) %>%
arrange(dec(runtime))
dat %>%
filter(thtr_rel_year > 1996 & thtr_rel_year < 1999) %>%
filter(runtime > 120) %>%
select(title, runtime, thtr_rel_year) %>%
arrange(desc(runtime))
# The best pic win
dat %>%
filter(best_pic_win == "yes") %>%
summarise(mean_run_time = mean(runtime))
dat %>%
summarise(mean_run_time, mean(runtime, na.rm = TRUE))
dat %>%
summarise(mean_run_time, mean(runtime, na.rm = TRUE))
dat %>%
summarise(mean_run_time, mean(runtime, na.rm = TRUE))
dat %>%
summarise(mean_run_time, mean(runtime, na.rm = TRUE))
nrow(is.na(dat$runtime))
nrow(is.na(dat$runtime))
sd = sd(runtime)
movies <- read.csv("C:/Users/Caesar/OneDrive - King's College London/Desktop/movies.csv")
pairs(movies)
dat %>%
filter(best_pic_win == "yes") %>%
group_by(actor1) %>% # group data by month
summarise(n = n()) %>% # perform a summary operation (count the n per month)
arrange(desc(n)) # sort in descending order
dat %>%
filter(best_pic_win == "yes") %>%
group_by(actor1) %>% # group data by month
summarise(n = n()) %>% # perform a summary operation (count the n per month)
arrange(desc(n)) # sort in descending order
movies %>%
filter(best_pic_win == "yes") %>%
summarise(count = n())
library(tidyverse)
movies %>%
filter(best_pic_win == "yes") %>%
summarise(count = n())
movies %>%
filter(best_pic_win == "yes") %>%
summarise(count = n())
movies %>%
filter(best_pic_nom == "yes")%>%
summarise(count = n())
unique(movies$director)
best_pic_win_yes <- movies$best_pic_win == yes
best_pic_win_yes <- movies[, best_pic_win == "yes"]
best_pic_win_yes <- movies[, best_pic_win == "yes"]
plot(best_pic_win ~ , data=movies)
best_pic_win_yes <- movies[best_pic_win == "yes", ]
best_pic_win_yes <- movies[best_win_pic == "yes", ]
best_pic_win_yes <- movies[, best_pic_win == "yes", ]
ggplot(ase(factor(best_pic_win), runtime))+geom_boxplot()
ggplot(aes(factor(best_pic_win), runtime))+geom_boxplot()
with(movies, plot(critics_scre~audience_score))
with(movies, plot(critics_score~audience_score))
with(movies, plot(critics_score~audience_score))
movies %>%
filter(best_pic_nom == "yes") %>%
group_by(critics_score)%>%
summarise(count() = n())
movies %>%
filter(best_pic_nom == "yes") %>%
group_by(critics_score)%>%
summarise(count = n())
movies %>%
filter(best_pic_nom == "yes")%>%
group_by(genre)%>%
summarise(count = n())
with(movies, plot(critics_score~audience_score, colour =1))
with(movies, plot(critics_score~audience_score, colour = 1))
cor(movies$best_pic_nom, movies$critics_score)
# change "yes" to 1 and "no" to 0
ifelse(movies$best_pic_win == "yes", 1, 0)
cor(movies$best_pic_nom, movies$critics_score)
cor(movies_q_pic_win$best_pic_nom, movies_q_pic_win$critics_score)
cor(movies_q_pic_win$best_pic_nom, movies_q_pic_win$critics_score)
# change "yes" to 1 and "no" to 0
movies_q_pic_win <- ifelse(movies$best_pic_win == "yes", 1, 0)
cor(movies_q_pic_win$best_pic_nom, movies_q_pic_win$critics_score)
# change "yes" to 1 and "no" to 0
movies <- ifelse(movies$best_pic_win == "yes", 1, 0)
cor(movies_q_pic_win$best_pic_nom, movies_q_pic_win$critics_score)
cbind(movies_q_pic_win, movies)
cor(movies$best_pic_nom, movies$critics_score)
cbind(movies_q_pic_win, movies)
cor(movies$best_pic_nom, movies$critics_score)
movies_n <- cbind(movies_q_pic_win, movies)
cor(movies_n$best_pic_nom, movies_n$critics_score)
View(movies_n)
# change "yes" to 1 and "no" to 0
movies$best_pic_win <- as.logical(ifelse(movies$best_pic_win == "yes", 1, 0))
# change "yes" to 1 and "no" to 0
movies$best_pic_win <- as.logical(ifelse(movies$best_pic_win == "yes", 1, 0))
cor(movies_n$best_pic_nom, movies_n$critics_score)
barplot(movies)
with(movies, plot(critics_score~audience_score))
movies %>%
filter(best_pic_nom == "yes")%>%
group_by(genre)%>%
summarise(count = n())
movies %>%
filter(best_pic_nom == "yes")%>%
group_by(genre)%>%
summarise(count = n())
library(ggplot2)
movies %>%
filter(best_pic_nom == "yes") %>%
group_by(critics_score)%>%
summarise(count = n())
movies %>%
filter(best_pic_nom == "yes") %>%
group_by(audience_score)%>%
summarise(count = n())
movies <- read.csv("C:/Users/Caesar/OneDrive - King's College London/Desktop/movies.csv")
library(tidyverse)
movies %>%
filter(best_pic_win == "yes") %>%
summarise(count = n())   # we have 7 best picture win movies
movies %>%
filter(best_pic_nom == "yes")%>%
summarise(count = n())  # we have 22 best picture normination movies
plot(best_pic_win ~ , data=movies)
movies %>%
filter(best_pic_nom == "yes") %>%
group_by(critics_score)%>%
summarise(count = n())
movies %>%
filter(best_pic_nom == "yes") %>%
group_by(audience_score)%>%
summarise(count = n())
movies %>%
filter(best_pic_nom == "yes")%>%
group_by(genre)%>%
summarise(count = n())
movies %>%
fitler(best_pic_nom == "yes")%>%
group_by(director)%>%
summarise(count = n())
movies %>%
fitler(best_pic_nom == "yes")%>%
group_by(director)%>%
summarise(count = n())
movies %>%
filter(best_pic_nom == "yes")%>%
group_by(director)%>%
summarise(count = n())
movies %>%
filter(best_pic_nom == "yes")%>%
group_by(genre)%>%
summarise(count = n())
movies %>%
filter(best_actor_win == "yes")%>%
filter(best_pic_win == "yes")%>%
summarise(count= n())
